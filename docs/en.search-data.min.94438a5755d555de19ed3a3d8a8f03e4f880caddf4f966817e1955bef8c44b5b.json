[{"id":0,"href":"/csapp/data_reprenstation/integer/","title":"Integer","section":"Data_reprenstations","content":"\rInterger Representation\r#\r1 bits and Bytes\r#\rwhy binary?\neasy to realize ENIAC 32，64，x86-64\nExtented\rCPU指令集架构：Intel的x86架构（PC），ARM公司的arm架构（手机）\nx86得名于Intel的CPU8086，现在一般指的是32位的架构（i386），但其实是一个系列，16、32、64都算\n为升级64位，Intel开发了IA-64指令集，但不兼容32指令集，导致市场反响不好\n而AMD公司开发的却兼容x86的指令集，叫做amd64，为大众接受\n所以Intel也得采用amd64，但为了尊严改了个名字叫x86_64\n所以是Intel叫x86_64，AMD叫amd64，都是64位指令集，有时也叫x64\nwin32和win64就单纯是以位来区分的，也就是说的32位、64位\nlogic\r#\rmath $\\rightarrow$ bit operation\n\u0026amp; | ~：从数学位的角度 bit operation \u0026amp;\u0026amp; || !：从C语言逻辑运算角度，logic operation，0为false，非0为true，只返回0或1 小技巧：确保非空指针 p \u0026amp;\u0026amp; *p shift\r#\r算术、逻辑\n若小于0或者超过字长：undefined behavior\nunsigned, signed, 2\u0026rsquo;s complement\r#\r转换时要注意一个比较大的数可能是有风险的\nC语言可用后缀U表示unsigned\nunsigned和signed同时操作时，会将signed转换为unsigned，改变理解方式\n"},{"id":1,"href":"/csapp/data_reprenstation/","title":"Data_reprenstations","section":"序","content":""}]